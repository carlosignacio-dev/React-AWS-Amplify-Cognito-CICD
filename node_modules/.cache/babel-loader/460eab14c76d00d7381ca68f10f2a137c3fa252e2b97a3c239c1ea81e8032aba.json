{"ast":null,"code":"var _jsxFileName = \"H:\\\\Trabajo\\\\Developer\\\\DevOps\\\\AWS + Reactjs\\\\AWS project 1\\\\my-quiz-app\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport quizData from \"./quizData\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [isCorrect, setIsCorrect] = useState(null);\n  const handleAnswerOptionClick = option => {\n    const correctAnswer = quizData[currentQuestion].answer;\n    setSelectedAnswer(option);\n    if (option === correctAnswer) {\n      setScore(score + 1);\n      setIsCorrect(true);\n    } else {\n      setIsCorrect(false);\n    }\n\n    // Delay moving to the next question to allow the user to see feedback\n    setTimeout(() => {\n      const nextQuestion = currentQuestion + 1;\n      if (nextQuestion < quizData.length) {\n        setCurrentQuestion(nextQuestion);\n        setIsCorrect(null); // Reset for the next question\n        setSelectedAnswer(\"\"); // Reset selected answer\n      } else {\n        setShowScore(true);\n      }\n    }, 1000); // Adjust time as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", score, \" out of \", quizData.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 8\n          }, this), \"/\", quizData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: quizData[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: quizData[currentQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(option),\n          style: {\n            backgroundColor: selectedAnswer === option ? isCorrect ? \"lightgreen\" : \"pink\" : \"\"\n          },\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this), selectedAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: isCorrect ? \"Correct! ðŸŽ‰\" : \"Sorry, thatâ€™s not right. ðŸ˜¢\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n}\n_s(Quiz, \"k/dZnU38U/4c3wIO5KeALjF8458=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","quizData","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","handleAnswerOptionClick","option","correctAnswer","answer","setTimeout","nextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","onClick","style","backgroundColor","marginTop","_c","$RefreshReg$"],"sources":["H:/Trabajo/Developer/DevOps/AWS + Reactjs/AWS project 1/my-quiz-app/src/Quiz.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport quizData from \"./quizData\";\r\n\r\nfunction Quiz() {\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [selectedAnswer, setSelectedAnswer] = useState(\"\");\r\n\tconst [isCorrect, setIsCorrect] = useState(null);\r\n\r\n\tconst handleAnswerOptionClick = (option) => {\r\n\t\tconst correctAnswer = quizData[currentQuestion].answer;\r\n\t\tsetSelectedAnswer(option);\r\n\t\tif (option === correctAnswer) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t\tsetIsCorrect(true);\r\n\t\t} else {\r\n\t\t\tsetIsCorrect(false);\r\n\t\t}\r\n\r\n\t\t// Delay moving to the next question to allow the user to see feedback\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\t\tif (nextQuestion < quizData.length) {\r\n\t\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t\t\tsetIsCorrect(null); // Reset for the next question\r\n\t\t\t\tsetSelectedAnswer(\"\"); // Reset selected answer\r\n\t\t\t} else {\r\n\t\t\t\tsetShowScore(true);\r\n\t\t\t}\r\n\t\t}, 1000); // Adjust time as needed\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"quiz\">\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className=\"score-section\">\r\n\t\t\t\t\tYou scored {score} out of {quizData.length}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"question-section\">\r\n\t\t\t\t\t\t<div className=\"question-count\">\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quizData.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"question-text\">\r\n\t\t\t\t\t\t\t{quizData[currentQuestion].question}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"answer-section\">\r\n\t\t\t\t\t\t{quizData[currentQuestion].options.map((option) => (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => handleAnswerOptionClick(option)}\r\n\t\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tbackgroundColor:\r\n\t\t\t\t\t\t\t\t\t\tselectedAnswer === option\r\n\t\t\t\t\t\t\t\t\t\t\t? isCorrect\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"lightgreen\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"pink\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{selectedAnswer && (\r\n\t\t\t\t\t\t<div style={{ marginTop: \"10px\" }}>\r\n\t\t\t\t\t\t\t{isCorrect ? \"Correct! ðŸŽ‰\" : \"Sorry, thatâ€™s not right. ðŸ˜¢\"}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}